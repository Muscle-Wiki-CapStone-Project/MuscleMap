"""Fixed UserWorkout many-to-many relationship

Revision ID: 204d30962302
Revises: a0bda1cb3d7d
Create Date: 2025-02-10 22:54:30.102915

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '204d30962302'
down_revision = 'a0bda1cb3d7d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('workout_exercise',
    sa.Column('workout_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ),
    sa.ForeignKeyConstraint(['workout_id'], ['user_workouts.id'], ),
    sa.PrimaryKeyConstraint('workout_id', 'exercise_id')
    )
    with op.batch_alter_table('user_workouts', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.drop_column('exercises')
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_workouts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('exercises', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.alter_column('description',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)

    op.drop_table('workout_exercise')
    # ### end Alembic commands ###
